<?xml version="1.0" encoding="UTF-8"?>
<!-- Test: XML definition of a view based on a FSM with an Error state -->
<tmfxml xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:noNamespaceSchemaLocation="xmlDefinition.xsd">

  <!-- View -->
  <timeGraphView id="mytestview">
    <head>
      <analysis id="mytestanalysis"/>
      <label value="Test"/>
    </head>

    <!-- Status of the analysis -->
    <definedValue name="CORRECT" value="0" color="#CCCCCC"/>
	  <definedValue name="ERROR" value="1" color="#00CCFF"/>

    <entry path="state">
      <display type="self"/>
    </entry>
  </timeGraphView>

  <!-- Pattern -->
  <pattern version="0" id="mytestanalysis">
    <head>
      <traceType id="org.eclipse.linuxtools.lttng2.kernel.tracetype" />
      <label value="Test2"/>
      <viewLabelPrefix value="test" />
    </head>

    <!-- Status of threads -->
    <definedValue name="RUNNING" value="1" />
	  <definedValue name="WAITING" value="0" />

    <location id="CurrentCPU">
      <stateAttribute type="constant" value="CPUs" />
      <stateAttribute type="eventField" value="cpu" />
    </location>

    <location id="CurrentThread">
      <stateAttribute type="constant" value="Threads" />
      <stateAttribute type="query">
        <stateAttribute type="location" value="CurrentCPU" />
        <stateAttribute type="constant" value="Current_thread" />
      </stateAttribute>
    </location>

    <!-- Swapper (tid=0) associated with the current cpu -->
    <location id="CurrentSwapper">
      <stateAttribute type="location" value="CurrentCPU" />
      <stateAttribute type="constant" value="swapper" />
    </location>

    <patternHandler>

      <!-- Actions -->
      <action id="update_thread">
        <stateChange>
          <stateAttribute type="constant" value="#CurrentScenario" />
          <stateAttribute type="location" value="CurrentCPU" />
          <stateAttribute type="constant" value="current_thread"/>
          <stateValue type="eventField" value="next_tid" />
        </stateChange>
        <stateChange>
          <stateAttribute type="constant" value="#CurrentScenario" />
          <stateAttribute type="location" value="CurrentCPU" />
          <stateAttribute type="constant" value="previous_thread"/>
          <stateValue type="eventField" value="prev_tid" />
        </stateChange>
        <stateChange>
          <stateAttribute type="constant" value="#CurrentScenario" />
          <stateAttribute type="constant" value="Threads" />
          <stateAttribute type="eventField" value="next_tid" />
          <stateValue type="int" value="$RUNNING" />
        </stateChange>
        <stateChange>
          <stateAttribute type="constant" value="#CurrentScenario" />
          <stateAttribute type="constant" value="Threads" />
          <stateAttribute type="eventField" value="prev_tid" />
          <stateValue type="int" value="$WAITING" />
        </stateChange>
      </action>

      <action id="good_state">
        <stateChange>
          <stateAttribute type="constant" value="state" />
          <stateValue type="long" value="0" />
        </stateChange>
      </action>

      <action id="bad_state">
        <stateChange>
          <stateAttribute type="constant" value="state" />
          <stateValue type="long" value="1" />
        </stateChange>
      </action>

      <action id="set_swapper_running">
        <stateChange>
          <stateAttribute type="location" value="CurrentSwapper" />
          <stateValue type="int" value="$RUNNING" />
        </stateChange>
      </action>

      <action id="set_swapper_waiting">
        <stateChange>
          <stateAttribute type="location" value="CurrentSwapper" />
          <stateValue type="int" value="$WAITING" />
        </stateChange>
      </action>

      <!-- Conditions -->
      <test id="switch_bad_next_swapper">
        <if>
          <and>
            <condition>
              <stateValue type="eventField" value="next_tid" />
              <stateValue type="long" value="0"/>
            </condition>
            <condition>
              <stateValue type="query" >
                <stateAttribute type="location" value="CurrentSwapper" />
              </stateValue>
              <stateValue type="int" value="$RUNNING"/>
            </condition>
          </and>
        </if>
      </test>

      <test id="switch_bad_prev_swapper">
        <if>
          <and>
            <condition>
              <stateValue type="eventField" value="prev_tid" />
              <stateValue type="long" value="0"/>
            </condition>
            <condition>
              <stateValue type="query" >
                <stateAttribute type="location" value="CurrentSwapper" />
              </stateValue>
              <stateValue type="int" value="$WAITING"/>
            </condition>
          </and>
        </if>
      </test>

      <test id="switch_bad">
        <if>
          <or>
            <and>
              <not>
                <condition>
                  <stateValue type="eventField" value="next_tid" />
                  <stateValue type="long" value="0"/>
                </condition>
              </not>
              <condition>
                <stateValue type="query" >
                  <stateAttribute type="constant" value="#CurrentScenario" />
                  <stateAttribute type="constant" value="Threads" />
                  <stateAttribute type="eventField" value="next_tid" />
                </stateValue>
                <stateValue type="int" value="$RUNNING"/>
              </condition>
            </and>
            <and>
              <not>
                <condition>
                  <stateValue type="eventField" value="prev_tid" />
                  <stateValue type="long" value="0"/>
                </condition>
              </not>
              <condition>
                <stateValue type="query" >
                  <stateAttribute type="constant" value="#CurrentScenario" />
                  <stateAttribute type="constant" value="Threads" />
                  <stateAttribute type="eventField" value="prev_tid" />
                </stateValue>
                <stateValue type="int" value="$WAITING"/>
              </condition>
            </and>
          </or>
        </if>
      </test>

      <test id="swapper_is_next">
        <if>
          <condition>
            <stateValue type="eventField" value="next_tid" />
            <stateValue type="long" value="0"/>
          </condition>
        </if>
      </test>

      <test id="swapper_is_prev">
        <if>
          <condition>
            <stateValue type="eventField" value="prev_tid" />
            <stateValue type="long" value="0"/>
          </condition>
        </if>
      </test>

      <!-- FSM -->
      <fsm id="sched_switch" initial="switch">
        <state id="switch">
          <!-- Error transitions -->
          <transition event="sched_switch" target="error" cond="switch_bad_next_swapper" action="update_thread:bad_state:set_swapper_running" />
          <transition event="sched_switch" target="error" cond="switch_bad_prev_swapper" action="update_thread:bad_state:set_swapper_waiting" />
          <transition event="sched_switch" target="error" cond="switch_bad" action="update_thread:bad_state" />
          <!-- Switch transitions -->
          <transition event="sched_switch" target="switch" cond="swapper_is_next" action="update_thread:good_state:set_swapper_running" />
          <transition event="sched_switch" target="switch" cond="swapper_is_prev" action="update_thread:good_state:set_swapper_waiting" />
          <transition event="sched_switch" target="switch" action="update_thread:good_state" />
        </state>
        <state id="error">
          <!-- Error transitions -->
          <transition event="sched_switch" target="error" cond="switch_bad_next_swapper" action="update_thread:bad_state:set_swapper_running" />
          <transition event="sched_switch" target="error" cond="switch_bad_prev_swapper" action="update_thread:bad_state:set_swapper_waiting" />
          <transition event="sched_switch" target="error" cond="switch_bad" action="update_thread:bad_state" />
          <!-- Switch transitions -->
          <transition event="sched_switch" target="switch" cond="swapper_is_next" action="update_thread:good_state:set_swapper_running" />
          <transition event="sched_switch" target="switch" cond="swapper_is_prev" action="update_thread:good_state:set_swapper_waiting" />
          <transition event="sched_switch" target="switch" action="update_thread:good_state" />
        </state>
      </fsm>

    </patternHandler>
  </pattern>

</tmfxml>
